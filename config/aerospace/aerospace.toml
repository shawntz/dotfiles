####################################
####################################
##### shawn's aerospace config #####
####################################
####################################


########################
### startup commands ###
########################
after-login-command = ['layout v_accordion']
after-startup-command = []
start-at-login = true
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true
accordion-padding = 30
default-root-container-layout = 'tiles'  # possible values: tiles|accordion
default-root-container-orientation = 'horizontal'  # possible values: horizontal|vertical|auto
key-mapping.preset = 'qwerty'
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']  # mouse follows focus when focused monitor changes, drop from config to remove

###################
### window gaps ###
###################
[gaps]
inner.horizontal = 0
inner.vertical   = 0
outer.left       = 0
outer.bottom     = 0
outer.top        = 0
outer.right      = 0


###########################
###########################
#### main binding mode ####
###########################
###########################
[mode.main.binding]  # 'main' binding mode declaration

############################
### i3-like app triggers ###
############################
cmd-alt-enter = ['workspace kitty', 'exec-and-forget open -n /Applications/kitty.app']
cmd-shift-enter = ['workspace neovim', 'exec-and-forget open -n /Applications/kitty.app --args nvim']
cmd-alt-p = ['workspace gimp', 'exec-and-forget open -n /Applications/GIMP.app']

###############################
### reorient container tree ###
###############################
ctrl-slash = 'layout tiles horizontal vertical'
ctrl-comma = 'layout accordion vertical horizontal'

#########################################
### change window focus within a node ###
#########################################
cmd-shift-h = ['focus --boundaries-action stop left' , 'move-mouse window-force-center']
cmd-shift-j = ['focus --boundaries-action stop down' , 'move-mouse window-force-center']
cmd-shift-k = ['focus --boundaries-action stop up'   , 'move-mouse window-force-center']
cmd-shift-l = ['focus --boundaries-action stop right', 'move-mouse window-force-center']

##################################
### move windows within a node ###
##################################
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

############################
### workspace navigation ###
############################
alt-a = ['workspace asana']
alt-b = ['workspace browser']
alt-c = ['workspace cal']
alt-d = ['workspace drive']
alt-e = ['workspace email']
alt-f = ['workspace finder']
alt-g = ['workspace github']
alt-i = ['workspace imessage']
alt-m = ['workspace music']
alt-n = ['workspace neovim']
alt-o = ['workspace obsidian']
alt-p = ['workspace gimp']
alt-r = ['workspace rstudio']
alt-s = ['workspace slack']
alt-t = ['workspace chatgpt']
alt-v = ['workspace vscode']
alt-x = ['workspace kitty']
alt-z = ['workspace zoom']

alt-1 = ['workspace 1']
alt-2 = ['workspace 2']
alt-3 = ['workspace 3']
alt-4 = ['workspace 4']

cmd-alt-1 = ['move-node-to-workspace 1']
cmd-alt-2 = ['move-node-to-workspace 2']
cmd-alt-3 = ['move-node-to-workspace 3']
cmd-alt-4 = ['move-node-to-workspace 4']

cmd-alt-j = 'workspace next'
cmd-alt-k = 'workspace prev'
ctrl-tab = 'workspace-back-and-forth'

cmd-semicolon = 'move-workspace-to-monitor --wrap-around next'
cmd-alt-n = ['focus-monitor next --wrap-around', 'move-mouse window-force-center']
cmd-alt-m = ['move-workspace-to-monitor next --wrap-around', 'move-mouse window-force-center']

##################################
### resize windows within node ###
##################################
cmd-9 = 'resize smart -64'
cmd-0 = 'resize smart +64'
cmd-shift-f  = ['fullscreen']  # toggle fullscreen


##############################
##############################
#### service binding mode ####
##############################
##############################
cmd-shift-semicolon = 'mode service'
[mode.service.binding]  # 'service' binding mode declaration
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main']  # reset layout
f = ['layout floating tiling', 'mode main']  # toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']


###################
###################
#### callbacks ####
###################
###################
[[on-window-detected]]  # asana
if.app-id = 'com.electron.asana'
run = 'move-node-to-workspace asana'

[[on-window-detected]]  # (brave) browser
if.app-id = 'com.brave.Browser'
run = 'move-node-to-workspace browser'

[[on-window-detected]]  # (google) drive
if.app-id = 'com.brave.Browser.app.aghbiahbpaijignceidepookljebhfak'
run = 'move-node-to-workspace drive'

[[on-window-detected]]  # (e)/gmail
if.app-id = 'com.apple.Safari.WebApp.8909B45D-6807-44EE-BCB7-E8A4FEF716A4'
run = 'move-node-to-workspace email'

[[on-window-detected]]  # finder
if.app-id = 'com.apple.finder'
run = 'move-node-to-workspace finder'

[[on-window-detected]]  # fantasti(cal)
if.app-id = 'com.flexibits.fantastical2.mac'
run = 'move-node-to-workspace cal'

[[on-window-detected]]  # github
if.app-id = 'com.apple.Safari.WebApp.74728F17-C93E-4227-BBBA-4E2E22BAF9F2'
run = 'move-node-to-workspace github'

[[on-window-detected]]  # imessage
if.app-id = 'com.apple.MobileSMS'
run = 'move-node-to-workspace imessage'

[[on-window-detected]]  # music
if.app-id = 'com.apple.Music'
run = 'move-node-to-workspace music'

[[on-window-detected]]  # obsidian
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace obsidian'

[[on-window-detected]]  # rstudio
if.app-id = 'com.rstudio.desktop'
run = 'move-node-to-workspace rstudio'

[[on-window-detected]]  # slack
if.app-id = 'com.tinyspeck.slackmacgap'
run = 'move-node-to-workspace slack'

[[on-window-detected]]  # chatgpt
if.app-id = 'com.openai.chat'
run = 'move-node-to-workspace chatgpt'

[[on-window-detected]]  # vscode
if.app-id = 'com.microsoft.VSCode'
run = 'move-node-to-workspace vscode'

[[on-window-detected]]  # zoom
if.app-id = 'us.zoom.xos'
run = 'move-node-to-workspace zoom'


##############################
### helpful aerospace docs ###
##############################
# available commands: https://nikitabobko.github.io/AeroSpace/commands
# normalizations: https://nikitabobko.github.io/AeroSpace/guide#normalization
# layouts: https://nikitabobko.github.io/AeroSpace/guide#layouts
# keyboard layouts: https://nikitabobko.github.io/AeroSpace/guide#key-mapping
# binding modes: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# resize: https://nikitabobko.github.io/AeroSpace/commands#resize
# focus changed callbacks: https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# exec-and-forget: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# move mouse: https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# See: https://nikitabobko.github.io/AeroSpace/commands#layout
# See: https://nikitabobko.github.io/AeroSpace/commands#focus
# See: https://nikitabobko.github.io/AeroSpace/commands#move
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
#
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
